0x00 정의와 성질

연결리스트의 성질
1. k번째 원소를 확인/변경하기 위해 O(k)가 필요함
2. 임의의 위치에 원소를 추가/임의 위치의 원소 제거는 O(1) (장점)
3. 원소들이 메모리 상에 연속해있지 않아 Cache hit rate가 낮지만 할당이 다소 쉬움
(3번은 코테용으로는 후순위로 미뤄놔도 됨)

연결리스트의 종류
1. 단일 연결 리스트(이전 원소를 알 수 없음)
2. 이중 연결 리스트(이전 원소를 알 수 있음)
3. 원형 연결 리스트(끝이 처음과 연결 되어있음)

                            배열    VS   연결 리스트
k번째 원소의 접근           O(1)            O(k)
임의 위치에 원소 추가/제거   O(N)            O(1)
메모리 상의 배치            연속            불연속
추가적으로 필요한 공간      XXXXX           O(N)

연결리스트는
각 원소가 다음 원소, 혹은 이전과 다음 원소의 값을 가지고 있어야함
32비트 컴퓨터면 주소값이 32비트니 4N바이트 추가 필요
64비트 컴퓨터면 주소값이 64비트니 8N바이트 추가 필요

0x01 기능과 구현

1. 임의의 위치에 있는 원소를 확인/변경, O(N)
2. 임의의 위치에 원소를 추가, O(1)
ex
3번째 원소 뒤에 A라는 값을 추가하라는 명령을 받았을때
3번째 원소의 주소가 없을경우 세번째 원소까지 확인하러 가야하므로
O(1)이라고 할 수 없음

3. 임의 위치의 원소를 제거, O(1)

연결리스트의 구현
구조체를 이용한 구현
struct NODE {
    struct NODE *prev, *next;
    int data;
}

4. 야매 연결리스트
0x04_linked_list_test.cpp 참고

5. STL List
선언 list<자료형> 이름;
메소드는 벡터와 비슷함